pkgname=('vim-youcompleteme-git')
_srcname='YouCompleteMe'
pkgdesc='A code-completion engine for Vim'
pkgver='r1'
pkgrel='1'
arch=('i686' 'x86_64')
url="https://github.com/Valloric/${_srcname}"
license=('GPL3')

depends=(
    'boost-libs'
    'clang'
    # 'mono'
    # 'nodejs'
    'python2'
    'rust'
    'vim'
)
makedepends=(
    'boost'
    'cargo'
    'cmake'
    'git'
    'go'
    'make'
    # 'npm'
)
provides=("${pkgname[0]%-git}")
conflicts=("${pkgname[0]%-git}")

source=("${_srcname}::git+${url}.git")
sha512sums=('SKIP')

_path_ycmd="third_party/ycmd"
_path_cpp="${_path_ycmd}/cpp"
_path_csharp="${_path_ycmd}/third_party/OmniSharpServer"
_path_go="${_path_ycmd}/third_party/gocode"
_path_js="${_path_ycmd}/third_party/tern_runtime"
_path_rust="${_path_ycmd}/third_party/racerd"

pkgver() {
    cd "${srcdir}/${_srcname}"

    printf 'r%s.%s.%s\n' \
        "$( git rev-list --count 'HEAD' )" \
        "$( git log --max-count='1' --pretty='format:%ct' )" \
        "$( git rev-parse --short 'HEAD' )"
}

prepare() {
    cd "${srcdir}/${_srcname}"

    git submodule update --init --recursive
}

build() {
    cd "${srcdir}/${_srcname}"

    mkdir ycmd_build
    cd ycmd_build
    cmake -G 'Unix Makefiles' -DUSE_SYSTEM_LIBCLANG=ON -DUSE_SYSTEM_BOOST=ON . "${srcdir}/${_srcname}/${_path_cpp}"
    cmake --build . --target 'ycm_support_libs' --config 'Release'

    # cd "${srcdir}/${_srcname}/${_path_csharp}"
    # xbuild /property:Configuration=Release

    cd "${srcdir}/${_srcname}/${_path_go}"
    go build

    # cd "${srcdir}/${_srcname}/${_path_js}"
    # npm install --production --python=python2

    cd "${srcdir}/${_srcname}/${_path_rust}"
    export CARGO_HOME="${srcdir}/cargo"
    cargo build --release
}

package() {
    cd "${srcdir}/${_srcname}"

    path_vim="${pkgdir}/usr/share/vim/vimfiles"

    install --directory \
        "${path_vim}/${_path_ycmd}/third_party" \
        "${path_vim}/${_path_go}" \
        "${path_vim}/${_path_rust}/target/release"
        # "${path_vim}/${_path_csharp}/OmniSharp/bin"

    cp --recursive {autoload,doc,plugin,python,ycmd_build} "${path_vim}/"
    cp --recursive third_party/{pythonfutures,requests-futures,retries} "${path_vim}/third_party/"
    cp --recursive "${_path_ycmd}/"{ycmd,ycm_client_support.so,ycm_core.so,check_core_version.py,CORE_VERSION} \
        "${path_vim}/${_path_ycmd}/"
    cp --recursive "${_path_ycmd}/third_party/"{argparse,bottle,frozendict,JediHTTP,requests,waitress} \
        "${path_vim}/${_path_ycmd}/third_party/"

    cp --recursive  "${_path_go}/gocode" "${path_vim}/${_path_go}/"
    # cp --recursive "${_path_csharp}/OmniSharp/bin/Release" "${path_vim}/${_path_csharp}/OmniSharp/bin/"
    # cp --recursive  "${_path_js}" "${path_vim}/${_path_js}"
    cp --recursive  "${_path_rust}/target/release/racerd" "${path_vim}/${_path_rust}/target/release/"

    chmod --recursive 'u=rwX,g=rX,o=rX' "${path_vim}"
    find "${path_vim}" -type d -name '.git' -exec rm --recursive '{}' '+'

    vim --noplugin -u NONE -U NONE --cmd ":helptags ${path_vim}/doc" --cmd ":quit" &> /dev/null
}
