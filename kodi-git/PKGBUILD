pkgname=('kodi-git')
_srcname='kodi'
pkgver='r1'
pkgrel='1'
pkgdesc='Software media player and entertainment hub for digital media'
arch=('i686' 'x86_64')
url='https://github.com/xbmc/xbmc'
license=('GPL2')

depends=(
    'python2-pillow' 'python2-simplejson'
    'mesa-demos' 'xorg-xdpyinfo'
    'fribidi' 'glew' 'hicolor-icon-theme' 'libcdio'
    'libjpeg-turbo' 'libmariadbclient' 'libmicrohttpd' 'libpulse' 'libssh'
    'libva' 'libxrandr' 'libxslt' 'lzo' 'sdl2' 'smbclient' 'taglib' 'tinyxml'
    'yajl'
)
optdepends=(
    'afpfs-ng: Apple shares support'
    'libnfs: NFS shares support'
    'libplist: AirPlay support'
    'libcec: Pulse-Eight USB-CEC adapter support'
    'lirc: Remote controller support'
    'pulseaudio: PulseAudio support'
    'shairplay: AirPlay support'
    'udisks: Automount external drives'
    'unrar: Archives support'
    'unzip: Archives support'
    'upower: Display battery level'
)
makedepends=(
    'afpfs-ng' 'boost' 'cmake' 'curl' 'doxygen' 'git' 'glew'
    'gperf' 'hicolor-icon-theme' 'jasper' 'java-runtime' 'libaacs' 'libass'
    'libbluray' 'libcdio' 'libcec' 'libgl' 'libmariadbclient' 'libmicrohttpd'
    'libmodplug' 'libmpeg2' 'libnfs' 'libplist' 'libpulse' 'libssh' 'libva'
    'libvdpau' 'libxrandr' 'libxslt' 'lzo' 'nasm' 'nss-mdns' 'python2-pillow'
    'python2-simplejson' 'rtmpdump' 'sdl2' 'sdl_image'
    'shairplay' 'smbclient' 'swig' 'taglib' 'tinyxml' 'unzip' 'upower' 'yajl' 'zip'
)
provides=('kodi')
conflicts=('kodi')
replaces=('xbmc')

source=("${_srcname}::git+https://github.com/xbmc/xbmc.git#branch=Helix")
sha256sums=('SKIP')

install='kodi.install'

pkgver() {
    cd "${srcdir}/${_srcname}"

    printf 'r%s.%s.%s\n' \
        "$( git rev-list --count 'HEAD' )" \
        "$( git log --max-count='1' --pretty='format:%ct' )" \
        "$( git rev-parse --short 'HEAD' )"
}

prepare() {
    cd "${srcdir}/${_srcname}"

    find . -type f -name '*.py' -exec sed --in-place 's|^#!.*python$|#!/usr/bin/python2|' "{}" +
    sed 's|^#!.*python$|#!/usr/bin/python2|' --in-place tools/depends/native/rpl-native/rpl
    sed 's/python/python2/' --in-place tools/Linux/kodi.sh.in
}

build() {
    cd "${srcdir}/${_srcname}"

    # Bootstrapping
    MAKEFLAGS=-j1 ./bootstrap

    # Configuring XBMC
    export PYTHON_VERSION=2  # external python v2
    ./configure --prefix='/usr' --exec-prefix='/usr' \
        --disable-silent-rules \
        --disable-shared-lib \
        --disable-debug \
        --enable-optimizations \
        --enable-gl \
        --disable-gles \
        --enable-sdl \
        --disable-vdpau \
        --enable-vaapi \
        --disable-crystalhd \
        --disable-vtbdecoder \
        --disable-openmax \
        --disable-tegra \
        --disable-profiling \
        --disable-xvba \
        --disable-joystick \
        --enable-xrandr \
        --disable-waveform \
        --disable-spectrum \
        --disable-goom \
        --disable-rsxs \
        --disable-fishbmc \
        --disable-projectm \
        --enable-x11 \
        --disable-ccache \
        --enable-alsa \
        --disable-pulse \
        --disable-ssh \
        --enable-rtmp \
        --disable-samba \
        --disable-nfs \
        --disable-afpclient \
        --disable-airplay \
        --disable-airtunes \
        --disable-ffmpeg-libvorbis \
        --disable-dvdcss \
        --disable-mid \
        --disable-hal \
        --disable-avahi \
        --disable-mdnsembedded \
        --disable-non-free \
        --disable-asap-codec \
        --enable-webserver \
        --disable-optical-drive \
        --enable-libbluray \
        --disable-texturepacker \
        --enable-external-libraries \
        --enable-udev \
        --disable-libusb \
        --disable-libcec \
        --disable-libmp3lame \
        --disable-libvorbisenc \
        --disable-libcap \
        --disable-player \
        --disable-gtest \
        --disable-codec \
        --disable-libav-compat \
        --enable-dependency-tracking \
        --with-lirc-device=/run/lirc/lircd

    # Now (finally) build
    make -j4
}

package() {
    cd "${srcdir}/${_srcname}"
    # Running make install
    make DESTDIR="${pkgdir}" install

    # Licenses
    install --directory --mode=755 "${pkgdir}/usr/share/licenses/${pkgname}"
    for licensef in LICENSE.GPL copying.txt; do
        mv "${pkgdir}/usr/share/doc/kodi/${licensef}" \
            "${pkgdir}/usr/share/licenses/${pkgname}"
    done
}
