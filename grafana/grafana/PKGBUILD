pkgname=('grafana')
srcname='grafana'
pkgdesc='Feature rich metrics dashboard and graph editor'
pkgver='3.0.4'
pkgrel='1'
arch=('i686' 'x86_64')
url="https://github.com/grafana/${srcname}"
license=('Apache')

makedepends=('git' 'go' 'godep' 'nodejs' 'nodejs-grunt-cli' 'npm' 'phantomjs')
provides=("${pkgname[0]%-git}")
conflicts=("${pkgname[0]%-git}")

source=(
    "${srcname}::git+${url}.git"
    'grunt_compress.patch'
)
sha512sums=(
    'SKIP'
    'SKIP'
)

_url_go="${url#*//}"

prepare() {
    cd "${srcdir}"
    export GOPATH="${srcdir}/gopath"

    mkdir --parents "${GOPATH}/src/${_url_go}"
    rm --recursive "${GOPATH}/src/${_url_go}"
    mv "${srcname}" "${GOPATH}/src/${_url_go}"

    cd "${GOPATH}/src/${_url_go}"
    git remote set-url origin "${url}"
    go get -v -u -d ./...
    git checkout --quiet "v${pkgver}"
    git apply "${srcdir}/grunt_compress.patch"
    godep restore

    npm install
}

build() {
    cd "${srcdir}"
    export GOPATH="${srcdir}/gopath"

    cd "${GOPATH}/src/${_url_go}"
    go install -v -ldflags="\
-X main.version=${pkgver} \
-X main.commit=$( git rev-parse HEAD ) \
-X main.buildstamp=$( date --utc '+%s' )" \
        ./...

    grunt --force release
}

package() {
    cd "${srcdir}"
    export GOPATH="${srcdir}/gopath"

    install --directory "${pkgdir}/"{"etc/${srcname}",usr,usr/share,"var/lib/${srcname}"}
    cp --recursive "${GOPATH}/bin" "${pkgdir}/usr/"

    cd "${GOPATH}/src/${_url_go}"
    cp --recursive tmp "${pkgdir}/usr/share/${srcname}"
    cp conf/ldap.toml "${pkgdir}/etc/${srcname}/"
    cp conf/sample.ini "${pkgdir}/etc/${srcname}/grafana.ini"

    chmod --recursive 'u=rwX,g=rX,o=rX' "${pkgdir}"
}
